{"version":3,"sources":["components/PokemonTypesList.jsx","utils/helpers.js","constants/index.js","components/PokemonCard.jsx","components/PokemonList.jsx","components/PokemonDetail.jsx","components/Navigation.jsx","components/Pokedex.jsx","App.js","index.js"],"names":["PokemonTypesList","types","length","className","map","_type","key","uuid","type","name","defaultProps","memo","id","substring","toString","Array","from","e","i","BASE","TYPES","IMG_PATH","pokemon","onCardClick","index","useState","setType","src","constants","helpers","buttonRef","useRef","useEffect","some","_name","includes","ref","cn","onClick","alt","pokemons","loadMoreData","isLoading","showLoadMore","isMounted","setIsMounted","listTransition","useSpring","opacity","transform","div","style","disabled","PokemonDetail","clicked","imgSrc","currentPokemon","height","weight","base_experience","containerTransition","imgTransition","h1Transition","config","stiff","pokemonTypesListTransition","delay","idTransition","gentle","aboutTransition","visibility","h1","span","img","domRect","Navigation","setClicked","onFavoriteClick","onFilterClick","isFilterClicked","currentPokemonId","toggleFavorite","setToggleFavorite","localStorage","getItem","JSON","parse","white","P","Api","setPokemons","initialNumber","setInitialNumber","setIsLoading","setImgSrc","setCurrentPokemon","setIsFilterClicked","appRef","getData","useCallback","a","ids","getPokemonByName","data","setItem","favoritesList","omitted","filter","favorite","stringify","push","_imgSrc","App","render","exact","path","component","Pokedex","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.cbe86abc.chunk.js","sourcesContent":["import uuid from 'uuid';\nimport PropTypes from 'prop-types';\nimport React, { memo } from 'react';\n\nconst PokemonTypesList = ({ types }) => (types.length === 0 ? null : (\n  <ul className=\"pokemon-type-list\">\n    {types.map((_type) => <li key={uuid()}>{_type.type.name}</li>)}\n  </ul>\n));\n\nPokemonTypesList.defaultProps = {\n  types: [],\n};\nPokemonTypesList.propTypes = {\n  types: PropTypes.arrayOf(PropTypes.shape({})),\n};\n\nexport default memo(PokemonTypesList);\n","const pad = '000';\n\nexport default {\n  formatId: (id) => (!id ? null : pad.substring(0, pad.length - id.toString().length) + id),\n  initialNumberOfPokemons: (length) => Array.from(Array(length || 10), (e, i) => i + 1),\n};\n","export default {\n  BASE: '/',\n  TYPES: ['water', 'fire', 'electric', 'grass'],\n  IMG_PATH: 'https://assets.pokemon.com/assets/cms2/img/pokedex/detail/',\n};\n","import PropTypes from 'prop-types';\nimport React, {\n  memo, useState, useEffect, useRef,\n} from 'react';\nimport cn from 'classnames';\n\nimport PokemonTypesList from './PokemonTypesList';\nimport { helpers } from '../utils';\nimport constants from '../constants';\n\nconst PokemonCard = ({\n  pokemon: {\n    name,\n    id,\n    types,\n  },\n  onCardClick,\n  index,\n}) => {\n  const [type, setType] = useState('normal');\n  const src = `${constants.IMG_PATH}${helpers.formatId(id)}.png`;\n  const buttonRef = useRef(null);\n\n  useEffect(() => {\n    types.some(({ type: { name: _name } }) => {\n      if (constants.TYPES.includes(_name)) {\n        setType(_name);\n        return true;\n      }\n      return false;\n    });\n  }, [types]);\n\n  return (\n    <button\n      ref={buttonRef}\n      type=\"button\"\n      className={cn('pokemon-card', { [type]: type })}\n      onClick={() => onCardClick(type, src, index)}\n    >\n      <span className=\"pokemon-card-title\">\n        {name}\n      </span>\n      <div className=\"pokemon-card-content\">\n        <PokemonTypesList types={types} />\n        <div>\n          <img\n            src={src}\n            alt=\"pokemon\"\n          />\n        </div>\n      </div>\n    </button>\n  );\n};\n\nPokemonCard.propTypes = {\n  index: PropTypes.number.isRequired,\n  onCardClick: PropTypes.func.isRequired,\n  pokemon: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n    types: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  }).isRequired,\n};\n\nexport default memo(PokemonCard);\n","import React, {\n  memo, useEffect, useState,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport { animated, useSpring } from 'react-spring';\n\nimport PokemonCard from './PokemonCard';\n\nconst PokemonList = ({\n  pokemons, loadMoreData, isLoading, onCardClick, showLoadMore,\n}) => {\n  const [isMounted, setIsMounted] = useState(false);\n\n  useEffect(() => {\n    setIsMounted(true);\n  }, []);\n\n  const listTransition = useSpring({\n    opacity: isMounted ? 1 : 0,\n    transform: isMounted ? 'translateY(0px)' : 'translateY(50px)',\n  });\n\n  return (\n    <animated.div style={listTransition} className=\"pokemon-list-wrapper\">\n      <div className=\"pokemon-list\">\n        {\n          pokemons.map((pokemon, index) => (\n            <article key={pokemon.id}>\n              <PokemonCard\n                pokemon={pokemon}\n                onCardClick={onCardClick}\n                index={index}\n              />\n            </article>\n          ))\n        }\n      </div>\n      <div className=\"load-more-wrapper\">\n        {showLoadMore && pokemons.length > 0 && (\n          <button disabled={isLoading} className=\"load-more\" type=\"button\" onClick={loadMoreData}>\n            <i className=\"material-icons\">expand_more</i>\n          </button>\n        )}\n      </div>\n    </animated.div>\n  );\n};\n\nPokemonList.propTypes = {\n  onCardClick: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  showLoadMore: PropTypes.bool.isRequired,\n  pokemons: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  loadMoreData: PropTypes.func.isRequired,\n};\n\nexport default memo(PokemonList);\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport {\n  useSpring, animated, config,\n} from 'react-spring';\n\nimport PokemonTypesList from './PokemonTypesList';\nimport { helpers } from '../utils';\n\nconst PokemonDetail = ({\n  clicked, className, imgSrc, currentPokemon: {\n    name, types, id, height, weight, base_experience,\n  },\n}) => {\n  const containerTransition = useSpring({\n    opacity: clicked ? 1 : 0,\n  });\n  const imgTransition = useSpring({\n    transform: clicked ? 'scale(1.2)' : 'scale(0.5)',\n  });\n  const h1Transition = useSpring({\n    config: config.stiff,\n    transform: clicked ? 'scale(1) translateY(0px)' : 'scale(0.5) translateY(50px)',\n  });\n  const pokemonTypesListTransition = useSpring({\n    config: config.stiff,\n    delay: 50,\n    transform: clicked ? 'translateY(0px)' : 'translateY(50px)',\n  });\n\n  const idTransition = useSpring({\n    config: config.gentle,\n    delay: 50,\n    transform: clicked ? 'translateX(0px)' : 'translateX(200px)',\n  });\n\n  const aboutTransition = useSpring({\n    config: config.gentle,\n    delay: 40,\n    transform: clicked ? 'translateY(0px)' : 'translateY(200px)',\n  });\n\n  return (\n    <animated.div\n      style={{\n        ...containerTransition,\n        visibility: clicked ? 'initial' : 'hidden',\n      }}\n      className={cn('pokemon-detail', className, { 'no-pointer-event': !clicked })}\n    >\n      <div className=\"container pokemon-info\">\n        <div className=\"pokemon-name-wrapper\">\n          <animated.h1 style={h1Transition} className=\"title\">{name}</animated.h1>\n          <animated.span style={idTransition} className=\"pokemon-id\">\n            {`#${helpers.formatId(id)}`}\n          </animated.span>\n        </div>\n        <animated.div style={pokemonTypesListTransition}>\n          <PokemonTypesList types={types} />\n        </animated.div>\n      </div>\n      <div className=\"pokemon-slider\">\n        {clicked && <animated.img alt=\"pokemon\" src={imgSrc} style={imgTransition} />}\n      </div>\n      <animated.div style={aboutTransition} className=\"about-container\">\n        <div className=\"container about-content\">\n          <span className=\"subtitle\">About</span>\n          <table className=\"about-table\">\n            <tbody>\n              <tr>\n                <th className=\"p-t-0\">Height</th>\n                <td>{height}</td>\n              </tr>\n              <tr>\n                <th>Weight</th>\n                <td>{weight}</td>\n              </tr>\n              <tr>\n                <th>Base experience</th>\n                <td>{base_experience}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </animated.div>\n    </animated.div>\n  );\n};\n\nPokemonDetail.defaultProps = {\n  className: null,\n  imgSrc: null,\n  domRect: null,\n  currentPokemon: {},\n};\n\nPokemonDetail.propTypes = {\n  clicked: PropTypes.bool.isRequired,\n  className: PropTypes.string,\n  imgSrc: PropTypes.string,\n  domRect: PropTypes.shape({}),\n  currentPokemon: PropTypes.shape({\n    name: PropTypes.string,\n    types: PropTypes.arrayOf(PropTypes.shape({})),\n    id: PropTypes.number,\n    height: PropTypes.number,\n    weight: PropTypes.number,\n    base_experience: PropTypes.number,\n  }),\n};\n\nexport default memo(PokemonDetail);\n","import React, { memo, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nconst Navigation = ({\n  setClicked,\n  clicked,\n  onFavoriteClick,\n  onFilterClick,\n  isFilterClicked,\n  currentPokemonId,\n}) => {\n  const [toggleFavorite, setToggleFavorite] = useState(false);\n\n  const handleOnClick = () => {\n    setToggleFavorite(!toggleFavorite);\n    onFavoriteClick();\n  };\n\n  useEffect(() => {\n    if (localStorage.getItem('favorites') && JSON.parse(localStorage.getItem('favorites')).includes(currentPokemonId)) {\n      setToggleFavorite(true);\n    } else {\n      setToggleFavorite(false);\n    }\n  }, [currentPokemonId]);\n\n  return (\n    <header className=\"container header-container\">\n      <nav\n        className={cn('nav', {\n          white: clicked,\n        })}\n      >\n        {clicked && (\n          <button type=\"button\" onClick={() => setClicked(false)}>\n            <i className=\"material-icons\">arrow_back</i>\n          </button>\n        )}\n        {\n          clicked\n            ? (\n              <button className=\"m-l-auto\" type=\"button\" onClick={handleOnClick}>\n                <i className=\"material-icons\">{toggleFavorite ? 'favorite' : 'favorite_border'}</i>\n              </button>\n            )\n            : (\n              <button className=\"m-l-auto\" type=\"button\" onClick={onFilterClick}>\n                <i className=\"material-icons\">{isFilterClicked ? 'list' : 'filter_list'}</i>\n              </button>\n            )\n        }\n      </nav>\n    </header>\n  );\n};\n\nNavigation.defaultProps = {\n  currentPokemonId: null,\n};\n\nNavigation.propTypes = {\n  currentPokemonId: PropTypes.number,\n  setClicked: PropTypes.func.isRequired,\n  onFavoriteClick: PropTypes.func.isRequired,\n  onFilterClick: PropTypes.func.isRequired,\n  clicked: PropTypes.bool.isRequired,\n  isFilterClicked: PropTypes.bool.isRequired,\n};\n\nexport default memo(Navigation);\n","import React, {\n  useState, useEffect, memo, useCallback, useRef,\n} from 'react';\nimport { Pokedex as Api } from 'pokeapi-js-wrapper';\n\nimport PokemonList from './PokemonList';\nimport PokemonDetail from './PokemonDetail';\nimport Navigation from './Navigation';\nimport { helpers } from '../utils';\n\nconst P = new Api();\n\nconst Pokedex = () => {\n  const [pokemons, setPokemons] = useState([]);\n  const [clicked, setClicked] = useState(false);\n  const [initialNumber, setInitialNumber] = useState(10);\n  const [isLoading, setIsLoading] = useState(false);\n  const [imgSrc, setImgSrc] = useState('');\n  const [type, setType] = useState('normal');\n  const [currentPokemon, setCurrentPokemon] = useState({});\n  const [isFilterClicked, setIsFilterClicked] = useState(false);\n\n  const appRef = useRef(null);\n\n  const getData = useCallback(async (\n    ids = helpers.initialNumberOfPokemons(initialNumber),\n  ) => {\n    setIsLoading(true);\n    const data = await P.getPokemonByName(ids);\n\n    setPokemons(data);\n\n    setIsLoading(false);\n  }, [initialNumber]);\n\n  useEffect(() => {\n    if (isFilterClicked || (isFilterClicked && clicked)) {\n      getData(JSON.parse(localStorage.getItem('favorites')));\n    } else {\n      getData();\n    }\n  }, [clicked, getData, isFilterClicked]);\n\n  useEffect(() => {\n    if (!localStorage.getItem('favorites')) {\n      localStorage.setItem('favorites', '[]');\n    }\n  }, []);\n\n  const handleOnClick = (_type, _imgSrc, index) => {\n    setImgSrc(_imgSrc);\n    setType(_type);\n    setClicked(true);\n    setCurrentPokemon(pokemons[index]);\n  };\n\n  const loadMoreData = () => {\n    setInitialNumber(initialNumber + 10);\n    getData();\n  };\n\n  const setToFavorites = () => {\n    const favoritesList = JSON.parse(localStorage.getItem('favorites'));\n\n    if (favoritesList.includes(currentPokemon.id)) {\n      const omitted = favoritesList.filter((favorite) => favorite !== currentPokemon.id);\n      localStorage.setItem('favorites', JSON.stringify(omitted));\n    } else {\n      favoritesList.push(currentPokemon.id);\n      localStorage.setItem('favorites', JSON.stringify(favoritesList));\n    }\n  };\n\n  const onFilterClick = () => {\n    setIsFilterClicked(!isFilterClicked);\n  };\n\n  return (\n    <main className=\"main\">\n      <div className=\"app\" ref={appRef}>\n        <Navigation\n          currentPokemonId={currentPokemon.id}\n          setClicked={setClicked}\n          clicked={clicked}\n          isFilterClicked={isFilterClicked}\n          onFavoriteClick={setToFavorites}\n          onFilterClick={onFilterClick}\n        />\n        <PokemonDetail\n          clicked={clicked}\n          imgSrc={imgSrc}\n          className={type}\n          currentPokemon={currentPokemon}\n        />\n        <section className=\"container\">\n          <h1 className=\"title\">Pokedex</h1>\n        </section>\n        <section className=\"pokemon-list-container\">\n          <PokemonList\n            pokemons={pokemons}\n            onCardClick={handleOnClick}\n            loadMoreData={loadMoreData}\n            isLoading={isLoading}\n            showLoadMore={!isFilterClicked}\n          />\n        </section>\n      </div>\n    </main>\n  );\n};\n\nexport default memo(Pokedex);\n","import React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { BrowserRouter } from 'react-router-dom';\nimport './styles/style.scss';\n\nimport { Pokedex } from './components';\n\nconst App = () => (\n  <BrowserRouter>\n    <Route\n      render={() => (\n        <Switch>\n          <Route exact path=\"/\" component={Pokedex} />\n          <Route exact path=\"/\" component={Pokedex} />\n        </Switch>\n      )}\n    />\n  </BrowserRouter>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}